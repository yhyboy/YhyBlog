@model global::WebPage.Areas.Control.Models.ModifyBlogViewModel
@{
    ViewBag.Title = "修改文章";
    Layout = "~/Areas/Control/Views/Shared/_LayoutControl.cshtml";
}
@Scripts.Render("~/bundles/UEditor")
@section SideNav{@Html.Partial("_BlogSideNavPartial")}
<ol class="breadcrumb">
    <li><span class="glyphicon glyphicon-home"></span>@Html.ActionLink("博客管理", "Index")</li>
    <li class="active">@Html.ActionLink("修改文章", "ModifyBlog")</li>
</ol>
@using (@Html.BeginForm("ModifyBlog", "Blog", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.HiddenFor(b => b.ID)
        <div class="form-group">
            @Html.LabelFor(b => b.Title, new {@class = " control-label col-md-2"})
            <div class="col-md-4">
                @Html.TextBoxFor(b => b.Title, new {@class = "form-control"})
                @Html.ValidationMessageFor(b => b.Title, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.CategoryId, new {@class = "control-label col-md-2"})
            <div class="col-md-4">
                @Html.HiddenFor(model => model.CategoryId)
                <div class="input-group" style="width: 260px">
                    <input id="ParentName" type="text" class="form-control" readonly />
                    <ul class="dropdown-menu dropdown-menu-left ztree" style="display: none; width: 100%" id="parenttree"></ul>
                    <div class="input-group-btn open">
                        <button id="btn-CategoryID" type="button" class="btn btn-default"><span class="caret"></span></button>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Summary, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(b => b.Summary, new { @class = "form-control " })
                @Html.ValidationMessageFor(b => b.Summary, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(b => b.Publish, new { @class = " control-label col-md-2" })
            <div class="col-md-4">
                @Html.CheckBoxFor(b => b.Publish, new { @class = "form-control" })
                @Html.ValidationMessageFor(b => b.Publish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.editorValue, new {@class = "control-label "})
            <div class="col-md-12">
                <script id="editor" type="text/plain" style="width: 100%; height: 100%; min-height: 450px">
                    @Html.Raw(Model.editorValue)
                </script>
            </div>
        </div>

        <button type="button" id="submit_btn" class="btn btn-primary" style="color: rgb(212, 106, 64); float: right;">
            <span class="glyphicon glyphicon-ok"></span> 提交
        </button>
    </div>
}
<script type="text/javascript">
    var ue = UE.getEditor('editor');
    var a = 1;
    $(document).ready(function () {
        a = 1;
        submit();
        //父栏目选择框 zTree
        var zTreeObj;
        // zTree 的参数配置
        var setting = {
            data: {
                simpleData: {
                    enable: true,
                    idKey: "id",
                    pIdKey: "pId",
                    rootPId: 0
                },
                key: {
                    name: "name"
                }
            },
            callback: {
                onClick: function (event, treeId, treeNode) {
                    $("#CategoryId").val(treeNode.id);
                    $("#ParentName").val(treeNode.name);
                    $("#parenttree").slideUp();
                }
            }
        };
        // zTree 的数据属性，
        $.post("@Url.Action("DropdownTree", "Category")", null, function (data) {
            zTreeObj = $.fn.zTree.init($("#parenttree"), setting, data);
            var node = zTreeObj.getNodeByParam("id", $("#CategoryId").val(), null);
            if (node != null) {
                $("#ParentName").val(node.name);
                zTreeObj.selectNode(node);

            }
        }, "json");

    });
    $("#btn-CategoryID").click(function () {
        if (a == 1) {
            $("#parenttree").slideDown();
            a = 0;
        } else {
            $("#parenttree").slideUp();
            a = 1;
        }
    });
    //父栏目选择框 zTree


    function submit() {
        $("#submit_btn").click(function () {
            if ($("form").valid()) {
                $.post($("form").attr("action"), $("form").serializeArray(), function (data) {

                    if (data.Code == 1) {
                        location.href = "@Url.Action("Index","Blog")";
                    }
                    else BootstrapDialog.alert(data.Message);
                }, "json");
            }
        });
    }
</script>